// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  name    String
  email   String   @unique
  phone   String   @unique
  role    Int      @default(1)
  password String
  avatar  String?
  createdAt DateTime?
  updatedAt DateTime?
  deleted   DateTime?

  groupPitches GroupPitch[]
  booking booking[]
  @@map("users")
}
model Service {
  id      Int      @id @default(autoincrement())
  name    String

  groupPitches GroupPitch[] @relation("grouppitch_service")
  groupPitches1 grouppitch_service[]
  @@map("services")
}
model GroupPitch {
  id      Int      @id @default(autoincrement())
  name    String
  id_district Int?
  id_ward Int?
  address_detail String? @db.Text
  map String? @db.Text
  description String? @db.Text
  ownerId   Int?
  status Int? @default(1)
  images String? @db.Text

  owner     User?    @relation(fields: [ownerId], references: [id])
  services     Service[]  @relation("grouppitch_service")
  servicesInGroupPitch grouppitch_service[]
  pitchTypes pitchtype[]
  @@map("grouppitch")
}

model grouppitch_service {
  id      Int      @id @default(autoincrement())
  groupPitchId  Int
  serviceId     Int
  price Float?

  groupPitch    GroupPitch? @relation(fields: [groupPitchId], references: [id])
  service       Service?    @relation(fields: [serviceId], references: [id])
}

model pitchtype {
  id      Int      @id @default(autoincrement())
  name    String
  type    String
  description String?

  groupPitch    GroupPitch @relation(fields: [id_groupPitch], references: [id])
  id_groupPitch Int

  pitch pitch[]
  timeSlot timeSlot[]
}

model pitch {
  id      Int      @id @default(autoincrement())
  name String? @db.Text

  pitch_pitchType    pitchtype @relation(fields: [id_pitchType], references: [id])
  id_pitchType Int

  booking booking[]
}

model timeSlot {
  id      Int      @id @default(autoincrement())
  startTime String
  endTime String
  price Float?

  timeSlot_pitchType    pitchtype @relation(fields: [id_pitchType], references: [id])
  id_pitchType Int

  booking booking[]
}

model booking {
  id      Int      @id @default(autoincrement())
  date DateTime
  createdAt DateTime?
  updatedAt DateTime?
  status Int @default(1)

  booking_timeSlot    timeSlot @relation(fields: [id_timeSlot], references: [id])
  id_timeSlot Int

  booking_user    User @relation(fields: [id_user], references: [id])
  id_user Int

  booking_pitch pitch @relation(fields: [id_pitch], references: [id])
  id_pitch Int
}